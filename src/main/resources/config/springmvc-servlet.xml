<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>

    <!-- 配置自动扫描 -->
    <context:component-scan base-package="**.controller">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- 视图解析 -->
    <bean id="validator"
          class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!--不设置则默认为classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="jacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
        <property name="serializationInclusion">
            <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">ALWAYS</value>
        </property>
    </bean>
    <bean id="jacksonSerializationConfig" class="com.fasterxml.jackson.databind.SerializationConfig"
          factory-bean="jacksonObjectMapper" factory-method="getSerializationConfig"/>

    <mvc:annotation-driven validator="validator">
        <mvc:message-converters register-defaults="true">
            <bean
                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json"/>
                <property name="objectMapper" ref="jacksonObjectMapper"/>
            </bean>
            <!-- <bean class="org.springframework.http.converter.json.GsonHttpMessageConverter"></bean> -->
            <!-- <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"></bean> -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- ***************************** 配置视图解释器 ***************************** -->
    <bean id="contentNegotiationManager"
          class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="xml" value="text/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
            </list>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass"
                              value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="prefix" value="/WEB-INF/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
    </bean>
    <!-- ***************************** 配置视图解释器 ***************************** -->

    <!-- 	<bean id="timeBasedAccessInterceptor" class="com.cheng.mywechat.Interceptor.BaseInterceptor">
            <property name="openingTime" value="9" />
            <property name="closingTime" value="12" />
            <property name="mappingURL" value=".*/base/*" />
        </bean>
        <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
            <property name="interceptors">
                <list>
                    <ref bean="timeBasedAccessInterceptor"/>
                </list>
            </property>
        </bean> -->

    <!-- 以下配置将拦截所有的URL请求 -->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
        <!--<bean class="com.cheng.mywechat.interceptor.BaseInterceptor"/>-->
    </mvc:interceptors>
    <!-- 以下配置将拦截特有的URL请求 -->
    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/base/*"/>-->
    <!--<bean class="com.cheng.mywechat.interceptor.time.TimeBasedAccessInterceptor">-->
    <!--<property name="openingTime" value="9" />-->
    <!--<property name="closingTime" value="12" />-->
    <!--<property name="mappingURL" value=".*/base/.*" />-->
    <!--</bean>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <mvc:resources mapping="/view/**" location="/WEB-INF/view/"/>
</beans>